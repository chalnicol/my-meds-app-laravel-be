<?php

namespace App\Mail;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Mail\Mailable;
use Illuminate\Mail\Mailables\Content;
use Illuminate\Mail\Mailables\Envelope;
use Illuminate\Queue\SerializesModels;
use App\Models\User;

class VerifyEmailMailable extends Mailable implements ShouldQueue
{
    use Queueable, SerializesModels;

    public string $verificationUrl; // Property to hold the frontend reset URL
    public string $userName; // Optional: To personalize the email (e.g., "Hello, [User Name]")

    /**
     * Create a new message instance.
     *
     * @param string $resetToken The password reset token generated by Laravel
     * @param string $userEmail The email of the user requesting the reset
     * @param string $userName (Optional) The user's name, if available
     * @return void
     */
    public function __construct(string $userName, string $verificationUrl)
    {
        $this->userName = $userName;
        $this->verificationUrl = $verificationUrl;
    }

    /**
     * Get the message envelope.
     */
    public function envelope(): Envelope
    {
        return new Envelope(
            subject: 'Verify your account - ' . config('app.name'), // Dynamic subject
        );
    }

    /**
     * Get the message content definition.
     */
    public function content(): Content
    {
        return new Content(
            // markdown: 'emails.password-reset', // Use a Blade Markdown view
            view: 'emails.custom-verify-email',
            with: [
                'verificationUrl' => url($this->verificationUrl),
                'userName' => $this->userName,
            ]
        );
    }

    /**
     * Get the attachments for the message.
     *
     * @return array<int, \Illuminate\Mail\Mailables\Attachment>
     */
    public function attachments(): array
    {
        return [];
    }
}
